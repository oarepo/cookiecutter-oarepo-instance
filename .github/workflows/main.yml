name: Test python

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [ 3.8 ]
        SQLALCHEMY_DATABASE_URI: ["postgresql://postgres:postgres@postgres/ci-test"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0
      - name: Cookiecutter
        run: |
          pip install cookiecutter
          printf '\n\n\n\n\n\n\n\n\n\n\n\n\n\n' | cookiecutter https://github.com/oarepo/cookiecutter-oarepo-instance.git
      - name: Before install
        run: |
          pip install poetry
          poetry config virtualenvs.create false
      - name: Install dependencies
        run: |
          cd my-site
          poetry install
      - name: Setup invenio
      - run: |
          cd my-site
          ./scripts/setup.sh
      - name: Run invenio
      - run: |
          cd my-site
          ./scripts/run.sh
#      - name: Test with pytest
#        run: |
#          pytest tests



